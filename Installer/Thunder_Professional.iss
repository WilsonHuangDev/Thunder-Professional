; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "迅雷专业版"
#define MyAppPublisher "深圳市迅雷网络技术有限公司"
#define MyAppURL "https://www.xunlei.com/"
#define MyAppExeName "Program\Thunder.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{BC830D26-0CF5-4B58-96FE-E65DD26DAE13}
AppName={#MyAppName}
AppVerName={#MyAppName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
DefaultDirName={autopf}\Thunder Network\Thunder_Professional
UninstallDisplayIcon={app}\{#MyAppExeName}
DefaultGroupName={#MyAppName}
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputDir=.\
OutputBaseFilename=ThunderProfessional_Setup
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "chinesesimplified"; MessagesFile: ".\ChineseSimplified.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\Thunder_Professional\Program\*"; DestDir: "{app}\Program"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\Thunder_Professional\BHO\*"; DestDir: "{app}\BHO"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\Thunder_Professional\Profiles\*"; DestDir: "{app}\Profiles"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
// 声明 Windows API 函数和常量
const
  CSIDL_LOCAL_APPDATA_LOW = 28;  // LocalLow 的系统常量

// 声明 SHGetFolderPathW 函数（注意返回值类型应为 Longint）
function SHGetFolderPath(hwnd: HWND; csidl: Integer; hToken: THandle; dwFlags: DWord; pszPath: string): Longint;
  external 'SHGetFolderPathW@shell32.dll stdcall';

// 获取 LocalLow 路径的函数
function GetLocalLowPath: string;
var
  Path: string;
begin
  // 初始化缓冲区（必须预留足够空间）
  SetLength(Path, 260);  // MAX_PATH 长度
  // 调用 API 并检查返回值是否为 0（即 S_OK 的数值）
  if SHGetFolderPath(0, CSIDL_LOCAL_APPDATA_LOW, 0, 0, Path) = 0 then
    Result := Trim(Path)  // 去除尾部空字符
  else
    Result := '';
end;

// 主卸载逻辑
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  InstallDir: String;
  ThunderPath, ThunderxPath: string;
  LocalLowPath, ThunderNetworkPath: string;
begin
  case CurUninstallStep of
    // 阶段一：删除安装目录
    usUninstall:
      begin
        InstallDir := ExpandConstant('{app}');
        if DirExists(InstallDir) then
          DelTree(InstallDir, True, True, True);
        RemoveDir(ExtractFileDir(InstallDir));
      end;

    // 阶段二：清理用户数据目录
    usPostUninstall:
      begin
        // 清理 AppData\Roaming 目录
        ThunderPath  := ExpandConstant('{userappdata}\thunder');
        ThunderxPath := ExpandConstant('{userappdata}\Thunderx');

        if DirExists(ThunderPath) then
          DelTree(ThunderPath, True, True, True);
        if DirExists(ThunderxPath) then
          DelTree(ThunderxPath, True, True, True); // 注意变量名拼写一致性

        // 清理 AppData\LocalLow 目录
        LocalLowPath := GetLocalLowPath();
        if LocalLowPath <> '' then
        begin
          ThunderNetworkPath := LocalLowPath + '\Thunder Network';
          if DirExists(ThunderNetworkPath) then
            DelTree(ThunderNetworkPath, True, True, True);
        end;
      end;
  end;
end;
